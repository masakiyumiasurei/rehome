@{
    ViewData["Title"] = "入金";
}
@model NyukinIndexModel

<div>
    <p>@ViewBag.OperationMessage</p>
</div>
<div class="text-danger">
    @Html.ValidationSummary(false)
</div>

<div class="text-center">
    <h2>請求情報一覧</h2>
    <button type="button" class="custom-btn btn-1" onclick="SwitchSearch();" id="SwitchButton">検索条件▼</button>

    @*<button type="button" class="custom-btn btn-1" onclick="UserCustom_Popup('SearchCustom','Views/Quote/_QuoteSearchCustom.cshtml');"><i class="fa-solid fa-screwdriver-wrench"></i>検索条件設定</button>*@
    <input type="hidden" value="SearchCustom" id="UserCustom_FunctionName">

        <div id="Search-Area" name="hide" style="display: none;"><br>
            @using (Html.BeginForm("Search", "Nyukin", FormMethod.Get, new { @class = "row g-3" }))
            {
                @await Html.PartialAsync("_NyukinSearch")
            }
        </div>
</div>
<br>
@*<div style="text-align:right">
    <label>明細なし　</label><input type="checkbox" id="single" checked>
    <a href="#" class="custom-btn btn-1" onclick="create_quote();"><i class="fa fa-plus-square" aria-hidden="true" id="rika"></i>新規</a>
</div>*@

@*<button type="button" class="custom-btn btn-1" onclick="UserCustom_Popup('IndexCustom','Views/Quote/_QuoteIndexCustom.cshtml');"><i class="fa-solid fa-screwdriver-wrench"></i>表示項目設定</button>*@
@*<input type="hidden" value="IndexCustom" id="UserCustom_FunctionName">*@

@*    <div class="container">*@
<div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
    <table id="myTable" class="table table-striped table-hover " style="width:100%">
        <thead>
            <tr>
                <th class="column5">入金</th>
                <th class="column5">詳細</th>
                <th>顧客名</th>
                <th>案件名</th>
                <th>請求日</th>
                <th>請求額</th>
                <th>入金合計</th>
                <th>最終入金日</th>
                <th class="column5">納付状況</th>

            </tr>
        </thead>
        @if (Model.Quotes != null)
        {
            int i = 0;
            @foreach (var item in Model.Quotes)
            {                
                <tr>
                    @Html.HiddenFor(modelItem=>item.見積ID)
                    @Html.HiddenFor(modelItem=>item.履歴番号)
                    <td>
                        <button type="button" name="Nyukin_search[@i]"
                                class="custom-btn btn-size-min btn-1" id="button" onclick="GetNyukin(this,@item.見積ID,@item.履歴番号);">
                            <i class="fa-solid fa-hand-holding-dollar"></i>
                        </button>
                    </td>
                    <td>
                        <div class="text-center">
                            <a href="@Url.Action("Create", "Quote", new { 見積ID = @item.見積ID, 履歴番号 = @item.履歴番号 })" 
                            class="custom-btn btn-size-min btn-1"><i class="fa fa-info-circle" aria-hidden="true"></i></a>
                        </div>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.顧客名)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.件名)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.請求日)
                    </td>
                    <td>
                        <span name="Mitumori[@i]">
                        @Html.DisplayFor(modelItem => item.見積金額)
                        </span>
                    </td>
                    <td>
                        <span name="Nyukin[@i]">
                        @Html.DisplayFor(modelItem => item.入金合計)
                        </span>                    
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.最終入金日)
                    </td>
                    <td>
                        <span style="color: red;" name="Nouhu[@i]">
                            @Html.DisplayFor(modelItem => item.納付状況)
                        </span>
                    </td>
                </tr>

                i++;
            }
        }

    </table>
</div>

@section Scripts{
    <script>
        function submitForm() {
            // 入金登録処理
            var formData = $('#myForm').serialize();

            // Ajaxリクエストを送信
            $.ajax({
                url: '/Nyukin/ajaxCreate', // NyukinコントローラーのajaxCreateメソッドへのURL 入金消込DB登録
                type: 'POST',
                data: formData,
            })
                .done(function (data) {
                    // 成功時の処理
                    alert('入金消込情報を登録しました。');

                    var sql = "SELECT isnull(SUM(入金額),0) + isnull(SUM(振込手数料),0) + isnull(SUM(前受金),0) AS 入金合計 " +
                        "FROM T_入金 where 見積ID=" + data.見積ID + " and 履歴番号=" + data.履歴番号;
                    console.log('データ', data);

                    //合計金額を返す
                    ReturnRecordJsonSqlAll(sql)
                        .then(function (result) {
                            
                            console.log('入金合計', result[0].入金合計);

                            var rowNumber = $('#set_rownumber').val(); //入力する行番号をセット
                            
                            $('[name="Nyukin[' + rowNumber + ']"]').text(result[0].入金合計);

                            const nyukinValue = parseInt($('[name="Nyukin[' + rowNumber + ']"]').text().replace(/,/g, ''), 10);
                            const mitumoriValue = parseInt($('[name="Mitumori[' + rowNumber + ']"]').text().replace(/,/g, ''), 10);

                            console.log(mitumoriValue);
                            console.log(nyukinValue);

                            if (mitumoriValue > nyukinValue  ) {
                                //未納
                                $('[name="Nouhu[' + rowNumber + ']"]').text('未納');

                             }
                             else
                             {
                                $('[name="Nouhu[' + rowNumber + ']"]').text('');
                            }
                        })
                        .catch(function (error) {
                            console.error('エラー', error);
                        });
                })
                .fail(function (error) {
                    // エラー時の処理
                    alert('エラーが発生しました。');
                })
                .always(function () {
                    // モーダルウィンドウを閉じる
                    $('#Nyukin-modal').modal('hide');
                });
        }

        function ReturnRecordJsonSqlAll(sql) {
    var param = {
        sql: sql
                };
    var url = '/ReturnRecordJson/ReturnRecordJsonSqlAll';

    // Promiseを返す
    return jQuery.ajax({
        method: "POST",
        url: url,
        data: param,
        dataType: 'json',
        
                    })
        }

        var rowNumber;
        function GetNyukin(elm,見積ID,履歴番号) {
            
            //選択行の行番号を取得
            var name = $(elm).attr('name');
            var row = name.substr(name.indexOf('[') + 1);
            row = row.substr(0, row.indexOf(']'));

            var url = "/Nyukin/Detail?見積ID=" + 見積ID + "&履歴番号=" + 履歴番号;
            console.log('入金行番号', row);

            jQuery.ajax({
                method: "GET",
                url: url,
            }).done(function (data) {
                // 通信成功時の処理

                $("#ModalHere").html(data);
                $("#ModalHere").find('.modal').modal('show');
                $("#set_rownumber").val(row);
                $("#PopupCallURL").val(URL);

                //console.log("URL : " + url);
                //console.log("data : " + data);
            }).fail(function (jqXHR, textStatus, errorThrown) {
                // 通信失敗時の処理
                alert('検索が失敗しました。');
                console.log("ajax通信に失敗しました");
                console.log("jqXHR          : " + jqXHR.status); // HTTPステータスが取得
                console.log("textStatus     : " + textStatus);    // タイムアウト、パースエラー
                console.log("errorThrown    : " + errorThrown.message); // 例外情報
                console.log("URL            : " + URL);
            }).always(function (data) {
                // 処理終了時
            });
        }

        
        //明細追加
        function addRow() {
            console.log('start_addRow()');
            var rowCount = $('#set_nyukinnumber').val() //入金明細の最大行
            var bodyElement = document.getElementById("Nyukinbody");            

            var add_html = '<tr id="明細[' + rowCount + ']">' +
                '<input name="Nyukins[' + rowCount + '].削除FLG" type="hidden" value="False">' +
                '<td><button type="button" name="delete[' + rowCount + ']" onclick="deleteRow(' + rowCount + ');" class="btn btn-secondary btn-sm align_center" >' +
                '<i class="fa-solid fa-trash-can"></i></button></td>' +               
                '<td><input class="form-control form-control-sm" name="Nyukins[' + rowCount + '].入金日" value="" type="date" ></td>' +
                '<td><input class="form-control form-control-sm" name="Nyukins[' + rowCount + '].入金額" onchange="calc();" type="number" value=""></td>' +
                '<td><input class="form-control form-control-sm" name="Nyukins[' + rowCount + '].振込手数料" type="number" value=""></td>' +
                '<td><input class="form-control form-control-sm" name="Nyukins[' + rowCount + '].振込名義" type="text" value=""></td>' +
                '<td><input class="form-control form-control-sm" name="Nyukins[' + rowCount + '].前受金" type="number" value=""></td>' +
                '<td><select class="form-control form-control-sm" name="Nyukins[' + rowCount + '].入金種別"><option value=""></option>' +
                '<option>現金</option>'+ 
                '<option>カード</option>'+
                '<option>小切手</option>'+
                '<option>手形</option>'+
                '</select></td > ' +
                '<td><input class="form-control form-control-sm" name="Nyukins[' + rowCount + '].備考" type="text" value=""></td>' +
                '<td><input class="form-control form-control-sm enable-false" tabindex="-1"></td>' +
                '</tr>'

            $('#Nyukinbody').append(add_html);
            rowCount++;
            $('#set_nyukinnumber').val(rowCount);
        }
       

        function deleteRow(idx) {

            var result = confirm("入金情報を削除しますか？");
            console.log(result)
            if (result) {
            console.log("before_del_flg: " + $('[name="Nyukins[' + idx + '].削除FLG"]').val());

            $('[name="Nyukins[' + idx + '].削除FLG"]').val(true);            
            var node = document.getElementById("明細[" + idx + "]");
            node.style.display = 'none';
            //calc();
            }
        }
    </script>
}